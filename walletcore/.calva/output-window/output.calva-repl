; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in Terminal: pushd /home/balbi/estudos/code-education-cursos/walletcore ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Using host:port 127.0.0.1:41999 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉walletcore.core꞉> 
; Jack-in done.
clj꞉walletcore.core꞉> 
; Evaluating file: client_test.clj
; 
; ; clj  walletcore.unit.logic.client-test 
; Execution error (ExceptionInfo) at walletcore.logic.client/eval2214$->client (client.clj:8).
; Output of ->client does not match schema: 
; 
; 	   {:name (not (instance? java.lang.String 12))}  
; 
; 
; Evaluation of file client_test.clj failed: class clojure.lang.Compiler$CompilerException
clj꞉walletcore.unit.logic.client-test꞉> 
; Evaluating file: client_test.clj
#'walletcore.unit.logic.client-test/->client-test
clj꞉walletcore.unit.logic.client-test꞉> 
; Running tests for the following namespaces:
;   walletcore.unit.logic.client-test
;   walletcore.unit.logic.client

; 3 tests finished, all passing 👍, ns: 1, vars: 1
clj꞉walletcore.unit.logic.client-test꞉> 
; Evaluating file: client_test.clj
#'walletcore.unit.logic.client-test/->client-test
clj꞉walletcore.unit.logic.client-test꞉> 
; Running tests for the following namespaces:
;   walletcore.unit.logic.client-test
;   walletcore.unit.logic.client

; ERROR in walletcore.unit.logic.client-test/->client-test (client.clj:9):
; Uncaught exception, not in assertion
; error: clojure.lang.ExceptionInfo: Output of ->client does not match schema: 

	   {:name (not (instance? java.lang.String 12))}  

 {:type :schema.core/error, :schema {:id java.util.UUID, :name java.lang.String, :email java.lang.String}, :value {:id #uuid "def0c1e4-af50-4629-926c-5b6ad399ccfe", :name 12, :email "james@test.com"}, :error {:name (not (instance? java.lang.String 12))}} (client.clj:9)
; 1 tests finished, problems found. 😭 errors: 1, failures: 0, ns: 1, vars: 1
clj꞉walletcore.unit.logic.client-test꞉> 
; Evaluating file: config.clj
nil
clj꞉walletcore.config꞉> 
; Evaluating file: client_test.clj
#'walletcore.unit.logic.client-test/->client-test
clj꞉walletcore.unit.logic.client-test꞉> 
; Running tests for the following namespaces:
;   walletcore.unit.logic.client-test
;   walletcore.unit.logic.client

; 3 tests finished, all passing 👍, ns: 1, vars: 1
clj꞉walletcore.unit.logic.client-test꞉> 
; Evaluating file: client_test.clj
#'walletcore.unit.logic.client-test/->client-test
clj꞉walletcore.unit.logic.client-test꞉> 
; Running tests for the following namespaces:
;   walletcore.unit.logic.client-test
;   walletcore.unit.logic.client

; ERROR in walletcore.unit.logic.client-test/->client-test (client.clj:9):
; Uncaught exception, not in assertion
; error: clojure.lang.ExceptionInfo: Output of ->client does not match schema: 

	   {:name (not (instance? java.lang.String 12))}  

 {:type :schema.core/error, :schema {:id java.util.UUID, :name java.lang.String, :email java.lang.String}, :value {:id #uuid "c6f7237a-5bc8-4e72-886b-6206809e8482", :name 12, :email "james@test.com"}, :error {:name (not (instance? java.lang.String 12))}} (client.clj:9)
; 1 tests finished, problems found. 😭 errors: 1, failures: 0, ns: 1, vars: 1
clj꞉walletcore.unit.logic.client-test꞉> 
; nREPL Connection was closed
